import javaf.uril.HashMap;

public calss Sulution{

	public int lengthOfLongestSubstring(String s){
		if(s.length() == 0) return 0;
		
		int max = 0;
		int left = 0 ;
		HashMap<Character,Integer> map = new HashMap<Character,Integer>();
		for(int i = 0 ; i < s.length() ; i++ ){
			if(map.containsKey(s.charAt(i))){
				left = Math.max(left,map.get(s.charAt(i)) + 1 );
			}
			map.put(s.charAt(i),i);
			max = Math.max(max,i-left+1);
		}
		return max;
		
	}
	public int lengthOfLongestSubstring(String s){
		Set<Character> occ = new HashSet<Character>();
		int l = s.length();
		
		int rk = -1, ans = 0;
		for(int i = 0; i < n; ++i){
			if(i != 0){
				occ.remove(s.charAt(i - 1));
			}
			while(rk + 1 < n && !occ.contains(s.charAt(rk + 1)) ){
				occ.add(s.charAt(rk + 1));
			}
			ans = Math.max(ans,rk - i + 1);
		}
		return ans;
		
	}

}